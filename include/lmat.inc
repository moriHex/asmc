ifndef _LMAT_
define _LMAT_

JOB_RUN_PERIODICALLY	equ 0x01
JOB_EXEC_ERROR		equ 0x02
JOB_RUNS_TODAY		equ 0x04
JOB_ADD_CURRENT_DATE	equ 0x08
JOB_NONINTERACTIVE	equ 0x10
JOB_INPUT_FLAGS		equ (JOB_RUN_PERIODICALLY OR JOB_ADD_CURRENT_DATE OR JOB_NONINTERACTIVE)
JOB_OUTPUT_FLAGS	equ (JOB_RUN_PERIODICALLY OR JOB_EXEC_ERROR OR JOB_RUNS_TODAY OR JOB_NONINTERACTIVE)

AT_INFO			STRUC
JobTime			dd ?
DaysOfMonth		dd ?
DaysOfWeek		UCHAR ?
Flags			UCHAR ?
Command			LPWSTR ?
AT_INFO			ENDS
PAT_INFO		typedef ptr AT_INFO
LPAT_INFO		typedef ptr AT_INFO

AT_ENUM			STRUC
JobId			dd ?
JobTime			dd ?
DaysOfMonth		dd ?
DaysOfWeek		UCHAR ?
Flags			UCHAR ?
Command			LPWSTR ?
AT_ENUM			ENDS
PAT_ENUM		typedef ptr AT_ENUM
LPAT_ENUM		typedef ptr AT_ENUM

NetScheduleJobAdd proto WINAPI :LPCWSTR, :LPBYTE, :LPDWORD
NetScheduleJobDel proto WINAPI :LPCWSTR, :DWORD, :DWORD
NetScheduleJobEnum proto WINAPI :LPCWSTR, :ptr, :DWORD, :LPDWORD, :LPDWORD, :LPDWORD
NetScheduleJobGetInfo proto WINAPI :LPCWSTR, :DWORD, :ptr

endif
